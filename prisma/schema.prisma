// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id                      String              @id                 @default(uuid())

  username                String
  password                String

  profilePath             String?

  nacionality             String?
  ci                      String?
  name                    String?
  secondName              String?
  lastname                String?
  secondLastname          String?

  birtdate                DateTime?
  age                     Int?
  estadoCivil             String?
  sexo                    String?

  email                   String
  phone                   String?
  phone2                  String?
  email2                  String?

  parroquiaId             String?
  parroquiaReference      configParroquia?      @relation(fields: [parroquiaId], references: [id])

  token                   String?

  deleteAt                String?
  createAt                DateTime                  @default(now())
  updateAt                DateTime?                 @updatedAt()      @default(now())

  // proyectos
  authors                 author[]

  // education
  education               educationProfile[]
  cursos                  cursosProfile[]

  // works
  works                   workProfile[]

  // relaci√≥n de usuario a usuario
  parentId                String?
  parentReference         user?                     @relation("parent", fields: [parentId], references: [id])
  childs                  user[]                    @relation("parent")

  // relation user por registro
  rolId                   String?
  rolReference            userGroup?               @relation(fields: [rolId], references: [id])

  // Usuario como creador
  configCategory                configCategory[]               @relation("create")
  configProgram                 configProgram[]                @relation("create")
  configInvestigationLine       configInvestigationLine[]     @relation("create")
  userGroup                     userGroup[]                    @relation("create")
  configDocument                configDocument[]               @relation("create")
  configState                   configState[]               @relation("create")
  configMunicipio               configMunicipio[]               @relation("create")
  configNucleo                  configNucleo[]               @relation("create")
  configParroquia               configParroquia[]               @relation("create")

  historyProject                historyProject[]
}

model educationProfile {
  id                    String              @id             @default(uuid())

  nivel                 String
  profesion             String
  yearEnd               String
  countryId             String
  institucion           String
  area                  String
  subarea               String

  userId                String
  userRef               user                @relation(fields: [userId], references: [id])

  deleteAt              String?
  createAt              DateTime            @default(now())
  updateAt              DateTime            @default(now()) @updatedAt
}

model cursosProfile {
  id                    String              @id             @default(uuid())

  tipo                  String
  horas                 Int
  country               String
  institucion           String
  description           String
  area                  String
  subarea               String

  userId                String
  userRef               user                @relation(fields: [userId], references: [id])

  deleteAt              String?
  createAt              DateTime            @default(now())
  updateAt              DateTime            @default(now()) @updatedAt
}

model workProfile {
  id                    String              @id             @default(uuid())

  actual                String              @default("SI")
  tipoInstitucion       String
  institucion           String
  ocupacion             String
  cargo                 String
  dateStart             DateTime
  dateEnd               DateTime?

  userId                String
  userRef               user                @relation(fields: [userId], references: [id])

  deleteAt              String?
  createAt              DateTime            @default(now())
  updateAt              DateTime            @default(now()) @updatedAt
}

model userGroup {
  id                        String              @id                 @default(uuid())

  name                      String
  group                     Json
  users                     user[]

  createById                String?
  createByRef               user?              @relation("create", fields: [createById], references: [id])

  deleteAt                 String?
  createAt                 DateTime            @default(now())
  updateAt                 DateTime?           @updatedAt()      @default(now())
}

model author {
  id                        String              @id                 @default(uuid())

  projectsId               String
  projectsRef              projects            @relation(fields: [projectsId], references: [id])

  createById              String
  createByRef             user              @relation(fields: [createById], references: [id])

  deleteAt                 String?
  createAt                 DateTime            @default(now())
  updateAt                 DateTime?           @updatedAt()      @default(now())
}

model projects {
  id                        String              @id                 @default(uuid())

  title                     String              @db.VarChar(300)
  resumen                   String              @db.VarChar(500)
  keywords                  String              @db.VarChar(300)

  public                    Boolean             @default(true)
  downloader                Boolean             @default(true)

  date                      DateTime

  status                    String?

  programId                 String
  programRef                configProgram      @relation(fields: [programId], references: [id])

  lineId                    String?
  lineRef                   configInvestigationLine?          @relation(fields: [lineId], references: [id])

  documentId                String
  documentRef               configDocument     @relation(fields: [documentId], references: [id])     

  authos                    author[]

  history                   historyProject[]

  deleteAt                  String?
  createAt                  DateTime            @default(now())
  updateAt                  DateTime?           @updatedAt()      @default(now())
}

model historyProject {
  id                        String              @id                 @default(uuid())

  eventName                 String
  userAuth                  Boolean             @default(false)

  userId                    String?
  userRef                   user?               @relation(fields: [userId], references: [id])

  projectId                 String
  projectRef                projects            @relation(fields: [projectId], references: [id])

  deleteAt                  String?
  createAt                  DateTime            @default(now())
  updateAt                  DateTime?           @updatedAt()      @default(now())
}

model configState {
  id                    String            @id                 @default(uuid())

  name                  String

  municipios            configMunicipio[]

  createById          String
  createByRef         user              @relation("create", fields: [createById], references: [id])

  deleteAt             String?
  updateAt             DateTime          @default(now())     @updatedAt()
  createAt             DateTime          @default(now())
}

model configMunicipio {
  id                    String            @id                 @default(uuid())

  name                  String

  stateId           String
  stateReference    configState   @relation(fields: [stateId], references: [id])


  createById          String
  createByRef         user              @relation("create", fields: [createById], references: [id])

  parroquias            configParroquia[]

  deleteAt             String?
  updateAt             DateTime          @default(now())     @updatedAt()
  createAt             DateTime          @default(now())
}

model configParroquia {
  id                    String            @id                 @default(uuid())

  name                  String

  municipioId           String
  municipioReference    configMunicipio   @relation(fields: [municipioId], references: [id])

  createById            String
  createByRef           user              @relation("create", fields: [createById], references: [id])

  user                  user[]
  nucleos               configNucleo[]

  deleteAt              String?
  updateAt              DateTime          @default(now())     @updatedAt()
  createAt              DateTime          @default(now())
}

model configNucleo {
  id                    String            @id                 @default(uuid())

  parroquiaId           String
  parroquiaReference    configParroquia   @relation(fields: [parroquiaId], references: [id])

  name                  String

  createById          String
  createByRef         user              @relation("create", fields: [createById], references: [id])

  deleteAt             String?
  updateAt             DateTime          @default(now())     @updatedAt()
  createAt             DateTime          @default(now())
}

model configDocument {
  id                    String            @id                 @default(uuid())

  size                  Decimal

  originalName         String
  path                 String
  donwload             String             @default("")
  mimyType             String

  // MANY RELATIONS
  projects              projects[]

  createById          String
  createByRef         user              @relation("create", fields: [createById], references: [id])

  deleteAt             String?
  updateAt             DateTime          @default(now())     @updatedAt()
  createAt             DateTime          @default(now())
}

model configCategory {
  id                    String            @id                 @default(uuid())

  ident                 String            @default("")
  name                  String

  configProgram        configProgram[]

  createById          String
  createByRef         user              @relation("create", fields: [createById], references: [id])

  deleteAt             String?
  updateAt             DateTime          @default(now())     @updatedAt()
  createAt             DateTime          @default(now())
}

model configProgram {
  id                    String            @id                 @default(uuid())

  name                  String            

  // PROYECTOS
  projects              projects[]

  categoryId           String
  categoryRef          configCategory   @relation(fields: [categoryId], references: [id])

  createById          String
  createByRef         user              @relation("create", fields: [createById], references: [id])

  deleteAt             String?
  updateAt             DateTime          @default(now())     @updatedAt()
  createAt             DateTime          @default(now())
}

model configInvestigationLine {
  id                    String            @id                 @default(uuid())

  name                  String

  // PROYECTOS
  projects              projects[]

  createById          String
  createByRef         user              @relation("create", fields: [createById], references: [id])

  deleteAt             String?
  updateAt             DateTime          @default(now())     @updatedAt()
  createAt             DateTime          @default(now())
}

//

model history {
  id                      String              @id                 @default(uuid())

  userId                  String

  ip                      String
  browser                 String
  eventName               String
  objectName              String
  objectId                String
  objectReference         String

  createAt               DateTime            @default(now())
}

model staticticsForMonth {
  id                      String              @id                 @default(uuid())

  objectName              String?             // objeto
  objectReferenceId       String              @default("biblioteca")             // is id => model throw is global

  year                    Int

  monthName              String
  monthNumber            Int     

  totalMonth             Int                 @default(0)

  totalDay1              Int                 @default(0)
  totalDay2              Int                 @default(0)
  totalDay3              Int                 @default(0)
  totalDay4              Int                 @default(0)
  totalDay5              Int                 @default(0)
  totalDay6              Int                 @default(0)
  totalDay7              Int                 @default(0)
  totalDay8              Int                 @default(0)
  totalDay9              Int                 @default(0)
  totalDay10             Int                 @default(0)
  totalDay11             Int                 @default(0)
  totalDay12             Int                 @default(0)
  totalDay13             Int                 @default(0)
  totalDay14             Int                 @default(0)
  totalDay15             Int                 @default(0)
  totalDay16             Int                 @default(0)
  totalDay17             Int                 @default(0)
  totalDay18             Int                 @default(0)
  totalDay19             Int                 @default(0)
  totalDay20             Int                 @default(0)
  totalDay21             Int                 @default(0)
  totalDay22             Int                 @default(0)
  totalDay23             Int                 @default(0)
  totalDay24             Int                 @default(0)
  totalDay25             Int                 @default(0)
  totalDay26             Int                 @default(0)
  totalDay27             Int                 @default(0)
  totalDay28             Int                 @default(0)
  totalDay29             Int                 @default(0)
  totalDay30             Int                 @default(0)
  totalDay31             Int                 @default(0)

  updateAt                DateTime            @default(now())         @updatedAt
  createAt                DateTime            @default(now())
}

model staticticsForYear {
  id                      String              @id                 @default(uuid())

  objectName              String?             // ob
  objectReferenceId       String              @default("biblioteca")             // is id => model throw is global

  year                    Int  

  totalYear              Int                  @default(0)

  totalMonth1           Int                  @default(0)
  totalMonth2           Int                  @default(0)
  totalMonth3           Int                  @default(0)
  totalMonth4           Int                  @default(0)
  totalMonth5           Int                  @default(0)
  totalMonth6           Int                  @default(0)
  totalMonth7           Int                  @default(0)
  totalMonth8           Int                  @default(0)
  totalMonth9           Int                  @default(0)
  totalMonth10          Int                  @default(0)
  totalMonth11          Int                  @default(0)
  totalMonth12          Int                  @default(0)
  
  updateAt                DateTime            @default(now())         @updatedAt
  createAt                DateTime            @default(now())
}

model staticticsForCentury {
  id                      String              @id                 @default(uuid())

  objectName              String?             // ob
  objectReferenceId       String              @default("biblioteca")             // is id => model throw is global

  year                    Int  

  totalYear               Int                  @default(0)
  
  updateAt                DateTime            @default(now())         @updatedAt
  createAt                DateTime            @default(now())
}

model staticticsUserForMonth {
  id                      String              @id                 @default(uuid())

  objectName              String?             // objeto
  objectReferenceId       String              @default("biblioteca")             // is id => model throw is global

  year                    Int

  monthName              String
  monthNumber            Int     

  totalMonth             Int                 @default(0)

  totalDay1              Int                 @default(0)
  totalDay2              Int                 @default(0)
  totalDay3              Int                 @default(0)
  totalDay4              Int                 @default(0)
  totalDay5              Int                 @default(0)
  totalDay6              Int                 @default(0)
  totalDay7              Int                 @default(0)
  totalDay8              Int                 @default(0)
  totalDay9              Int                 @default(0)
  totalDay10             Int                 @default(0)
  totalDay11             Int                 @default(0)
  totalDay12             Int                 @default(0)
  totalDay13             Int                 @default(0)
  totalDay14             Int                 @default(0)
  totalDay15             Int                 @default(0)
  totalDay16             Int                 @default(0)
  totalDay17             Int                 @default(0)
  totalDay18             Int                 @default(0)
  totalDay19             Int                 @default(0)
  totalDay20             Int                 @default(0)
  totalDay21             Int                 @default(0)
  totalDay22             Int                 @default(0)
  totalDay23             Int                 @default(0)
  totalDay24             Int                 @default(0)
  totalDay25             Int                 @default(0)
  totalDay26             Int                 @default(0)
  totalDay27             Int                 @default(0)
  totalDay28             Int                 @default(0)
  totalDay29             Int                 @default(0)
  totalDay30             Int                 @default(0)
  totalDay31             Int                 @default(0)

  updateAt                DateTime            @default(now())         @updatedAt
  createAt                DateTime            @default(now())
}

model staticticsUserForYear {
  id                      String              @id                 @default(uuid())

  objectName              String?             // ob
  objectReferenceId       String              @default("biblioteca")             // is id => model throw is global

  year                    Int  

  totalYear              Int                  @default(0)

  totalMonth1           Int                  @default(0)
  totalMonth2           Int                  @default(0)
  totalMonth3           Int                  @default(0)
  totalMonth4           Int                  @default(0)
  totalMonth5           Int                  @default(0)
  totalMonth6           Int                  @default(0)
  totalMonth7           Int                  @default(0)
  totalMonth8           Int                  @default(0)
  totalMonth9           Int                  @default(0)
  totalMonth10          Int                  @default(0)
  totalMonth11          Int                  @default(0)
  totalMonth12          Int                  @default(0)
  
  updateAt                DateTime            @default(now())         @updatedAt
  createAt                DateTime            @default(now())
}

model staticticsUserForCentury {
  id                      String              @id                 @default(uuid())

  objectName              String?             // ob
  objectReferenceId       String              @default("biblioteca")             // is id => model throw is global

  year                    Int  

  totalYear               Int                  @default(0)
  
  updateAt                DateTime            @default(now())         @updatedAt
  createAt                DateTime            @default(now())
}

model staticticsProjectForMonth {
  id                      String              @id                 @default(uuid())

  objectName              String?             // objeto
  objectReferenceId       String              @default("biblioteca")             // is id => model throw is global

  year                    Int

  monthName              String
  monthNumber            Int     

  totalMonth             Int                 @default(0)

  totalDay1              Int                 @default(0)
  totalDay2              Int                 @default(0)
  totalDay3              Int                 @default(0)
  totalDay4              Int                 @default(0)
  totalDay5              Int                 @default(0)
  totalDay6              Int                 @default(0)
  totalDay7              Int                 @default(0)
  totalDay8              Int                 @default(0)
  totalDay9              Int                 @default(0)
  totalDay10             Int                 @default(0)
  totalDay11             Int                 @default(0)
  totalDay12             Int                 @default(0)
  totalDay13             Int                 @default(0)
  totalDay14             Int                 @default(0)
  totalDay15             Int                 @default(0)
  totalDay16             Int                 @default(0)
  totalDay17             Int                 @default(0)
  totalDay18             Int                 @default(0)
  totalDay19             Int                 @default(0)
  totalDay20             Int                 @default(0)
  totalDay21             Int                 @default(0)
  totalDay22             Int                 @default(0)
  totalDay23             Int                 @default(0)
  totalDay24             Int                 @default(0)
  totalDay25             Int                 @default(0)
  totalDay26             Int                 @default(0)
  totalDay27             Int                 @default(0)
  totalDay28             Int                 @default(0)
  totalDay29             Int                 @default(0)
  totalDay30             Int                 @default(0)
  totalDay31             Int                 @default(0)

  updateAt                DateTime            @default(now())         @updatedAt
  createAt                DateTime            @default(now())
}

model staticticsProjectForYear {
  id                      String              @id                 @default(uuid())

  objectName              String?             // ob
  objectReferenceId       String              @default("biblioteca")             // is id => model throw is global

  year                    Int  

  totalYear              Int                  @default(0)

  totalMonth1           Int                  @default(0)
  totalMonth2           Int                  @default(0)
  totalMonth3           Int                  @default(0)
  totalMonth4           Int                  @default(0)
  totalMonth5           Int                  @default(0)
  totalMonth6           Int                  @default(0)
  totalMonth7           Int                  @default(0)
  totalMonth8           Int                  @default(0)
  totalMonth9           Int                  @default(0)
  totalMonth10          Int                  @default(0)
  totalMonth11          Int                  @default(0)
  totalMonth12          Int                  @default(0)
  
  updateAt                DateTime            @default(now())         @updatedAt
  createAt                DateTime            @default(now())
}

model staticticsProjectForCentury {
  id                      String              @id                 @default(uuid())

  objectName              String?             // ob
  objectReferenceId       String              @default("biblioteca")             // is id => model throw is global

  year                    Int  

  totalYear               Int                  @default(0)
  
  updateAt                DateTime            @default(now())         @updatedAt
  createAt                DateTime            @default(now())
}

